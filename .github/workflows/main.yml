name: CI/CD Workflow

on:
  push:
    branches:
      - main  # 只在推送到 main 分支时触发
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 显式授予写入权限
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'  # 根据你的项目需求选择合适的 Python 版本

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # 安装运行时依赖
          pip install mypy  # 安装开发工具依赖

      - name: Create docs directory
        run: mkdir -p docs  # 创建 docs 目录

      - name: Run static analysis with mypy
        run: |
          mypy --install-types --non-interactive .
          mypy --ignore-missing-imports .  # 检查项目根目录下的所有文件

      - name: Generate documentation with pydoc
        run: |
          for module in *.py; do  # 遍历当前目录下的所有 Python 文件
            if [[ "$module" != "requirements.txt" && "$module" != "pydoc.yml" && "$module" != "mypy.ini" ]]; then  # 排除非模块文件
              pydoc -w "${module%.py}"  # 生成 HTML 文档，去掉 .py 后缀
            fi
          done
          ls -la  # 列出当前目录内容，检查是否生成了 HTML 文件

      - name: Move generated HTML files to docs directory
        run: |
          if ls *.html 1> /dev/null 2>&1; then  # 检查是否有 HTML 文件生成
            mv *.html ./docs/  # 将生成的 HTML 文件移动到 docs 目录
          else
            echo "No HTML files generated by pydoc."
          fi

      - name: Check generated documentation files
        run: |
          ls -la ./docs  # 列出 docs 目录的内容

      - name: Ensure docs directory is not empty
        run: |
          if [ ! "$(ls -A ./docs)" ]; then
            echo "Docs directory is empty, creating a placeholder file."
            touch ./docs/index.html
          fi

      - name: Deploy documentation to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs  # 指定文档生成的目录
          force_orphan: true  # 强制创建 gh-pages 分支
          commit_message: "Auto-deploy documentation"
